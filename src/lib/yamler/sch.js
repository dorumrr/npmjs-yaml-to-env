var PlainValue=require("./pval.js"),resolveSeq=require("./seqres.js"),warnings=require("./warns.js");function createMap(e,t,n){const i=new resolveSeq.YAMLMap(e);if(t instanceof Map)for(const[r,a]of t)i.items.push(e.createPair(r,a,n));else if(t&&"object"==typeof t)for(const r of Object.keys(t))i.items.push(e.createPair(r,t[r],n));return"function"==typeof e.sortMapEntries&&i.items.sort(e.sortMapEntries),i}const map={createNode:createMap,default:!0,nodeClass:resolveSeq.YAMLMap,tag:"tag:yaml.org,2002:map",resolve:resolveSeq.resolveMap};function createSeq(e,t,n){const i=new resolveSeq.YAMLSeq(e);if(t&&t[Symbol.iterator])for(const r of t){const t=e.createNode(r,n.wrapScalars,null,n);i.items.push(t)}return i}const seq={createNode:createSeq,default:!0,nodeClass:resolveSeq.YAMLSeq,tag:"tag:yaml.org,2002:seq",resolve:resolveSeq.resolveSeq},string={identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:resolveSeq.resolveString,stringify:(e,t,n,i)=>(t=Object.assign({actualString:!0},t),resolveSeq.stringifyString(e,t,n,i)),options:resolveSeq.strOptions},failsafe=[map,seq,string],intIdentify$2=e=>"bigint"==typeof e||Number.isInteger(e),intResolve$1=(e,t,n)=>resolveSeq.intOptions.asBigInt?BigInt(e):parseInt(t,n);function intStringify$1(e,t,n){const{value:i}=e;return intIdentify$2(i)&&i>=0?n+i.toString(t):resolveSeq.stringifyNumber(e)}const nullObj={identify:e=>null==e,createNode:(e,t,n)=>n.wrapScalars?new resolveSeq.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>null,options:resolveSeq.nullOptions,stringify:()=>resolveSeq.nullOptions.nullStr},boolObj={identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:e=>"t"===e[0]||"T"===e[0],options:resolveSeq.boolOptions,stringify:({value:e})=>e?resolveSeq.boolOptions.trueStr:resolveSeq.boolOptions.falseStr},octObj={identify:e=>intIdentify$2(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o([0-7]+)$/,resolve:(e,t)=>intResolve$1(e,t,8),options:resolveSeq.intOptions,stringify:e=>intStringify$1(e,8,"0o")},intObj={identify:intIdentify$2,default:!0,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:e=>intResolve$1(e,e,10),options:resolveSeq.intOptions,stringify:resolveSeq.stringifyNumber},hexObj={identify:e=>intIdentify$2(e)&&e>=0,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x([0-9a-fA-F]+)$/,resolve:(e,t)=>intResolve$1(e,t,16),options:resolveSeq.intOptions,stringify:e=>intStringify$1(e,16,"0x")},nanObj={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.inf|(\.nan))$/i,resolve:(e,t)=>t?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:resolveSeq.stringifyNumber},expObj={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e),stringify:({value:e})=>Number(e).toExponential()},floatObj={identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.([0-9]+)|[0-9]+\.([0-9]*))$/,resolve(e,t,n){const i=t||n,r=new resolveSeq.Scalar(parseFloat(e));return i&&"0"===i[i.length-1]&&(r.minFractionDigits=i.length),r},stringify:resolveSeq.stringifyNumber},core=failsafe.concat([nullObj,boolObj,octObj,intObj,hexObj,nanObj,expObj,floatObj]),intIdentify$1=e=>"bigint"==typeof e||Number.isInteger(e),stringifyJSON=({value:e})=>JSON.stringify(e),json=[map,seq,{identify:e=>"string"==typeof e,default:!0,tag:"tag:yaml.org,2002:str",resolve:resolveSeq.resolveString,stringify:stringifyJSON},{identify:e=>null==e,createNode:(e,t,n)=>n.wrapScalars?new resolveSeq.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:stringifyJSON},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:e=>"true"===e,stringify:stringifyJSON},{identify:intIdentify$1,default:!0,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:e=>resolveSeq.intOptions.asBigInt?BigInt(e):parseInt(e,10),stringify:({value:e})=>intIdentify$1(e)?e.toString():JSON.stringify(e)},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:e=>parseFloat(e),stringify:stringifyJSON}];json.scalarFallback=e=>{throw new SyntaxError(`Unresolved plain scalar ${JSON.stringify(e)}`)};const boolStringify=({value:e})=>e?resolveSeq.boolOptions.trueStr:resolveSeq.boolOptions.falseStr,intIdentify=e=>"bigint"==typeof e||Number.isInteger(e);function intResolve(e,t,n){let i=t.replace(/_/g,"");if(resolveSeq.intOptions.asBigInt){switch(n){case 2:i=`0b${i}`;break;case 8:i=`0o${i}`;break;case 16:i=`0x${i}`}const t=BigInt(i);return"-"===e?BigInt(-1)*t:t}const r=parseInt(i,n);return"-"===e?-1*r:r}function intStringify(e,t,n){const{value:i}=e;if(intIdentify(i)){const e=i.toString(t);return i<0?"-"+n+e.substr(1):n+e}return resolveSeq.stringifyNumber(e)}const yaml11=failsafe.concat([{identify:e=>null==e,createNode:(e,t,n)=>n.wrapScalars?new resolveSeq.Scalar(null):null,default:!0,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>null,options:resolveSeq.nullOptions,stringify:()=>resolveSeq.nullOptions.nullStr},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>!0,options:resolveSeq.boolOptions,stringify:boolStringify},{identify:e=>"boolean"==typeof e,default:!0,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,resolve:()=>!1,options:resolveSeq.boolOptions,stringify:boolStringify},{identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^([-+]?)0b([0-1_]+)$/,resolve:(e,t,n)=>intResolve(t,n,2),stringify:e=>intStringify(e,2,"0b")},{identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^([-+]?)0([0-7_]+)$/,resolve:(e,t,n)=>intResolve(t,n,8),stringify:e=>intStringify(e,8,"0")},{identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",test:/^([-+]?)([0-9][0-9_]*)$/,resolve:(e,t,n)=>intResolve(t,n,10),stringify:resolveSeq.stringifyNumber},{identify:intIdentify,default:!0,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^([-+]?)0x([0-9a-fA-F_]+)$/,resolve:(e,t,n)=>intResolve(t,n,16),stringify:e=>intStringify(e,16,"0x")},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.inf|(\.nan))$/i,resolve:(e,t)=>t?NaN:"-"===e[0]?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:resolveSeq.stringifyNumber},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?([0-9][0-9_]*)?(\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e.replace(/_/g,"")),stringify:({value:e})=>Number(e).toExponential()},{identify:e=>"number"==typeof e,default:!0,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.([0-9_]*)$/,resolve(e,t){const n=new resolveSeq.Scalar(parseFloat(e.replace(/_/g,"")));if(t){const e=t.replace(/_/g,"");"0"===e[e.length-1]&&(n.minFractionDigits=e.length)}return n},stringify:resolveSeq.stringifyNumber}],warnings.binary,warnings.omap,warnings.pairs,warnings.set,warnings.intTime,warnings.floatTime,warnings.timestamp),schemas={core:core,failsafe:failsafe,json:json,yaml11:yaml11},tags={binary:warnings.binary,bool:boolObj,float:floatObj,floatExp:expObj,floatNaN:nanObj,floatTime:warnings.floatTime,int:intObj,intHex:hexObj,intOct:octObj,intTime:warnings.intTime,map:map,null:nullObj,omap:warnings.omap,pairs:warnings.pairs,seq:seq,set:warnings.set,timestamp:warnings.timestamp};function findTagObject(e,t,n){if(t){const e=n.filter((e=>e.tag===t)),i=e.find((e=>!e.format))||e[0];if(!i)throw new Error(`Tag ${t} not found`);return i}return n.find((t=>(t.identify&&t.identify(e)||t.class&&e instanceof t.class)&&!t.format))}function createNode(e,t,n){if(e instanceof resolveSeq.Node)return e;const{defaultPrefix:i,onTagObj:r,prevObjects:a,schema:o,wrapScalars:s}=n;t&&t.startsWith("!!")&&(t=i+t.slice(2));let l=findTagObject(e,t,o.tags);if(!l){if("function"==typeof e.toJSON&&(e=e.toJSON()),!e||"object"!=typeof e)return s?new resolveSeq.Scalar(e):e;l=e instanceof Map?map:e[Symbol.iterator]?seq:map}r&&(r(l),delete n.onTagObj);const f={value:void 0,node:void 0};if(e&&"object"==typeof e&&a){const t=a.get(e);if(t){const e=new resolveSeq.Alias(t);return n.aliasNodes.push(e),e}f.value=e,a.set(e,f)}return f.node=l.createNode?l.createNode(n.schema,e,n):s?new resolveSeq.Scalar(e):e,t&&f.node instanceof resolveSeq.Node&&(f.node.tag=t),f.node}function getSchemaTags(e,t,n,i){let r=e[i.replace(/\W/g,"")];if(!r){const t=Object.keys(e).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown schema "${i}"; use one of ${t}`)}if(Array.isArray(n))for(const e of n)r=r.concat(e);else"function"==typeof n&&(r=n(r.slice()));for(let e=0;e<r.length;++e){const n=r[e];if("string"==typeof n){const i=t[n];if(!i){const e=Object.keys(t).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown custom tag "${n}"; use one of ${e}`)}r[e]=i}}return r}const sortMapEntriesByKey=(e,t)=>e.key<t.key?-1:e.key>t.key?1:0;class Schema{constructor({customTags:e,merge:t,schema:n,sortMapEntries:i,tags:r}){this.merge=!!t,this.name=n,this.sortMapEntries=!0===i?sortMapEntriesByKey:i||null,!e&&r&&warnings.warnOptionDeprecation("tags","customTags"),this.tags=getSchemaTags(schemas,tags,e||r,n)}createNode(e,t,n,i){const r={defaultPrefix:Schema.defaultPrefix,schema:this,wrapScalars:t};return createNode(e,n,i?Object.assign(i,r):r)}createPair(e,t,n){n||(n={wrapScalars:!0});const i=this.createNode(e,n.wrapScalars,null,n),r=this.createNode(t,n.wrapScalars,null,n);return new resolveSeq.Pair(i,r)}}PlainValue._defineProperty(Schema,"defaultPrefix",PlainValue.defaultTagPrefix),PlainValue._defineProperty(Schema,"defaultTags",PlainValue.defaultTags),exports.Schema=Schema;
